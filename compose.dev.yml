services:
  api:
    build:
      context: .
    container_name: api
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 8000:8000
    command: npm run dev
    env_file:
      - .env
    networks:
      - express-js-docker
  db:
    image: mongo
    container_name: db
    expose:
      - "27017"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
    volumes:
      - mongo_data_dev:/data/db
      - mongo_configdb_dev:/data/configdb
    networks:
      - express-js-docker
  zookeeper:
    image: zookeeper:3.9
    # image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    restart: always
    volumes:
      - zookeeper_data:/data
      - zookeeper_logs:/logs
    #   - zookeeper_datalog:/datalog
    expose:
      - "2181"
    networks:
      - express-js-docker

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: broker
    restart: always
    volumes:
      - kafka_data:/kafka
      - ./certs:/etc/kafka/secrets
    expose:
      - "9092"
    ports:
      # - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181" # Connect to the Zookeeper service
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: INSIDE://broker:9092,OUTSIDE://zamanfu.fun:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      
      KAFKA_SSL_KEYSTORE_LOCATION: "/etc/kafka/secrets/kafka-keystore.p12"
      KAFKA_SSL_KEYSTORE_PASSWORD: "pass123"
      KAFKA_SSL_KEY_PASSWORD: "pass123"
      KAFKA_SSL_TRUSTSTORE_LOCATION: "/etc/kafka/secrets/kafka-trustore.p12"
      KAFKA_SSL_TRUSTSTORE_PASSWORD: "pass123"
      KAFKA_SSL_ENABLED_PROTOCOLS: TLSv1.2,TLSv1.1,TLSv1

      KAFKA_SSL_CLIENT_AUTH: "required"
      
      # ! CORRECT SSL CONFIGURATION 
      # KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: "HTTPS"
      # KAFKA_SSL_KEYSTORE_LOCATION: "/etc/kafka/secrets/kafka-keystore.jks"
      # KAFKA_SSL_KEYSTORE_PASSWORD: "kafkapass"
      # KAFKA_SSL_KEY_PASSWORD: "kafkapass"
      # KAFKA_SSL_TRUSTSTORE_LOCATION: "/etc/kafka/secrets/kafka-trustore.jks"
      # KAFKA_SSL_TRUSTSTORE_PASSWORD: "kafkapass"
      # KAFKA_SSL_ENABLED_PROTOCOLS: TLSv1.2,TLSv1.1,TLSv1


      # ! CONFIGURATION FOR PLAINTEXT COMMUNICATION
      # KAFKA_BROKER_ID: 1
      # KAFKA_REPLICATION_FACTOR: 1
      # KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093 
      # KAFKA_ADVERTISED_LISTENERS: INSIDE://broker:9092,OUTSIDE://zamanfu.fun:9093 # SERVER: change "OUTSIDE://localhost:9093" -> "OUTSIDE://148.251.44.114:9093"
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      # KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      # KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181" # Connect to the Zookeeper service
      # ALLOW_PLAINTEXT_LISTENER: YES
    networks:
      - express-js-docker
    depends_on:
      - zookeeper # Ensure Zookeeper starts before Kafka
networks:
  express-js-docker:
volumes:
  mongo_data_dev:
  mongo_configdb_dev:
  kafka_data:
  zookeeper_data:
  zookeeper_logs: